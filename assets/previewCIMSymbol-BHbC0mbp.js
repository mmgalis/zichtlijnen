import{fS as w,fH as b,fT as V,b9 as v,fN as j,fU as G,fV as g}from"./index-2x4JY06U.js";import{CIMSymbolRasterizer as O}from"./CIMSymbolRasterizer-B7WdBmfM.js";const m=new O(null),f=w(b.size),S=w(b.maxSize),C=w(b.lineWidth),R=1;async function $(i,e,o){const l=e==null?void 0:e.size;let t=l!=null&&typeof l=="object"&&"width"in l?l.width:l,n=l!=null&&typeof l=="object"&&"height"in l?l.height:l;if(t==null||n==null)if(o==="esriGeometryPolygon")t=f,n=f;else{const a=await U(i,e,o);a&&(t=a.width,n=a.height),o==="esriGeometryPolyline"&&(t=C),t=t!=null&&isFinite(t)?Math.min(t,S):f,n=n!=null&&isFinite(n)?Math.max(Math.min(n,S),R):f}return e.style==="legend"&&o==="esriGeometryPolyline"&&(t=C),{width:t,height:n}}async function U(i,e,o){const{feature:l,fieldMap:t,viewParams:n}=e.cimOptions||e,a=await G.resolveSymbolOverrides(i.data,l,null,t,o,null,n);if(!a)return null;(i=i.clone()).data={type:"CIMSymbolReference",symbol:a},i.data.primitiveOverrides=void 0;const r=[];return g.fetchResources(a,m.resourceManager,r),g.fetchFonts(a,m.resourceManager,r),r.length>0&&await Promise.all(r),g.getEnvelope(a,null,m.resourceManager)}async function E(i,e={}){var M;const{node:o,opacity:l,symbolConfig:t}=e,n=t!=null&&typeof t=="object"&&"isSquareFill"in t&&t.isSquareFill,a=e.cimOptions||e,r=a.geometryType||V((M=i==null?void 0:i.data)==null?void 0:M.symbol),y=await $(i,e,r),{feature:P,fieldMap:I}=a,L=n||r!=="esriGeometryPolygon"?"preview":"legend",h=await m.rasterizeCIMSymbolAsync(i,P,y,L,I,r,null,a.viewParams,a.allowScalingUp);if(!h)return null;const{width:x,height:z}=h,c=document.createElement("canvas");c.width=x,c.height=z,c.getContext("2d").putImageData(h,0,0);const d=v(y.width),p=v(y.height),s=new Image(d,p);s.src=c.toDataURL(),s.ariaLabel=e.ariaLabel??null,s.alt=e.ariaLabel??"",l!=null&&(s.style.opacity=`${l}`);let u=s;if(e.effectView!=null){const F={shape:{type:"image",x:0,y:0,width:d,height:p,src:s.src},fill:null,stroke:null,offset:[0,0]};u=j([[F]],[d,p],{effectView:e.effectView,ariaLabel:e.ariaLabel})}return o&&u&&o.appendChild(u),u}export{E as previewCIMSymbol};
