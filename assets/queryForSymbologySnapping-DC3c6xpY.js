import{aB as $,hC as E,hD as G,n as x,dB as O,hE as P,hF as q,hG as B,dp as H,hH as A,c7 as J,bl as N}from"./index-CY8jQoH7.js";async function W(t,d,l,p,o){const{elevationProvider:f,renderCoordsHelper:i}=t,{elevationInfo:u}=d,{pointsInFeatures:m,spatialReference:h}=p,g=$.fromJSON(h),y=E(u,!0),I=await G(y,g,o);x(o);const c=[],e=new Set,s=new Set,a=new H,n=O(0,0,0,$.WGS84),r=new A,S=J();n.spatialReference=g;const C=t.elevationProvider.spatialReference??t.spatialReference;for(const{objectId:w,points:v}of m){const b=l(w);if(b==null){for(const R of v)c.push(R.z??0);e.add(w);continue}b.isDraped&&s.add(w);const F=b.graphic.geometry;a.setFromElevationInfo(P(F,u)),a.updateFeatureExpressionInfoContext(I,b.graphic,d);for(const{x:R,y:j,z}of v)n.x=R,n.y=j,n.z=z??0,await q(n,S,C,0,{signal:o}),B(S,f,a,i,r),c.push(r.z)}return{elevations:c,drapedObjectIds:s,failedObjectIds:e}}async function k(t,d,l){if(t==null||d.candidates.length===0)return D;const p=t.graphics3DGraphicsByObjectID??t.graphics3DGraphics,o=[],f=[],{renderer:i}=t,u=i!=null&&"arcadeRequired"in i&&i.arcadeRequired?N():null,m=async(e,{graphic:s,graphics3DSymbol:a})=>{const n=await u,r=await t.getRenderingInfoAsync(s,i,n,{signal:l});return r==null?[]:a.queryForSnapping(e,g,r,l)},{candidates:h,spatialReference:g}=d;for(let e=0;e<h.length;++e){const s=h[e],{objectId:a}=s,n=typeof a=="number"?p==null?void 0:p.get(a):void 0;if(n==null)continue;const{graphics3DSymbol:r}=n;r.symbologySnappingSupported&&(o.push(m(s,n)),f.push(e))}if(o.length===0)return D;const y=await Promise.all(o);x(l);const I=[],c=[];for(let e=0;e<y.length;++e){const s=y[e],a=f[e];for(const n of s)I.push(n),c.push(a)}return{candidates:I,sourceCandidateIndices:c}}const D={candidates:[],sourceCandidateIndices:[]};export{W as m,k as r};
