import{ii as f,dt as _,cW as g,ka as v,kb as l,e as x,a as y,kc as b,c$ as L,c7 as u,n as k,fE as P,d9 as S,kd as V,ke as C,kf as h}from"./index-CY8jQoH7.js";const I=1e3;function j(t,n,s){const e=v(),o=l(e);return f(o,o,t,.5),f(o,o,n,.5),e[3]=_(o,t),g(o,o,s),e}let m=class{constructor(){this._idToComponent=new Map,this._components=new b(t=>t.bounds),this._edges=new b(t=>t.bounds),this._tmpLineSegment=L(),this._tmpP1=u(),this._tmpP2=u(),this._tmpP3=u(),this.remoteClient=null}async fetchCandidates(t,n){await Promise.resolve(),k(n),await this._ensureEdgeLocations(t,n);const s=[];return this._edges.forEachNeighbor(e=>(this._addCandidates(t,e,s),s.length<I),t.bounds),{result:{candidates:s}}}async _ensureEdgeLocations(t,n){const s=[];if(this._components.forEachNeighbor(i=>{if(i.info==null){const{id:a,uid:d}=i;s.push({id:a,uid:d})}return!0},t.bounds),!s.length)return;const e={components:s},o=await this.remoteClient.invoke("fetchAllEdgeLocations",e,n??{});for(const i of o.components)this._setFetchEdgeLocations(i)}async add(t){const n=new p(t.id,t.bounds);return this._idToComponent.set(n.id,n),this._components.add([n]),{result:{}}}async remove(t){const n=this._idToComponent.get(t.id);if(n){const s=[];this._edges.forEachNeighbor(e=>(e.component===n&&s.push(e),!0),n.bounds),this._edges.remove(s),this._components.remove([n]),this._idToComponent.delete(n.id)}return{result:{}}}_setFetchEdgeLocations(t){const n=this._idToComponent.get(t.id);if(n==null||t.uid!==n.uid)return;const s=P.createView(t.locations),e=new Array(s.count),o=u(),i=u();for(let c=0;c<s.count;c++){s.position0.getVec(c,o),s.position1.getVec(c,i);const r=j(o,i,t.origin),E=new T(n,c,r);e[c]=E}this._edges.add(e);const{objectIds:a,origin:d}=t;n.info={locations:s,objectIds:a,origin:d}}_addCandidates(t,n,s){const{info:e}=n.component,{origin:o,objectIds:i}=e,a=e.locations,d=a.position0.getVec(n.index,this._tmpP1),c=a.position1.getVec(n.index,this._tmpP2);g(d,d,o),g(c,c,o);const r=i[a.componentIndex.get(n.index)];this._addEdgeCandidate(t,r,d,c,s),w(t,r,d,s),w(t,r,c,s)}_addEdgeCandidate(t,n,s,e,o){if(!t.returnEdge)return;const i=l(t.bounds),a=S(s,e,this._tmpLineSegment),d=V(a,i,this._tmpP3);C(t.bounds,d)&&o.push({type:"edge",objectId:n,target:h(d),distance:_(i,d),start:h(s),end:h(e)})}};m=x([y("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],m);const $=m;function w(t,n,s,e){if(!t.returnVertex||!C(t.bounds,s))return;const o=l(t.bounds);e.push({type:"vertex",objectId:n,target:h(s),distance:_(o,s)})}class p{constructor(n,s){this.id=n,this.bounds=s,this.info=null,this.uid=++p.uid}}p.uid=0;class T{constructor(n,s,e){this.component=n,this.index=s,this.bounds=e}}export{$ as default};
