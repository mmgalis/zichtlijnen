import{be as j,bf as G,b7 as z,bg as O,bh as V,bi as E,bj as _,bk as A,bl as B,aB as D,bm as L,bn as P}from"./index-CY8jQoH7.js";import{c as T,B as R}from"./utils-B3vjFKqb.js";let m=null;const U=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function Y(t,e,o){return t.x<0?t.x+=e:t.x>o&&(t.x-=e),t}function W(t,e,o,r){const a=j(o)?G(o):null,u=a?Math.round((a.valid[1]-a.valid[0])/e.scale[0]):null;return t.map(i=>{const s=new z(i.geometry);return O(e,s,s),i.geometry=a?Y(s,u??0,r[0]):s,i})}function q(t,e=18,o,r,a){const u=new Float64Array(r*a);e=Math.round(L(e));let i=Number.POSITIVE_INFINITY,s=Number.NEGATIVE_INFINITY;const g=P(o);for(const{geometry:d,attributes:N}of t){const{x,y:c}=d,$=Math.max(0,x-e),M=Math.max(0,c-e),F=Math.min(a,c+e),I=Math.min(r,x+e),h=+g(N);for(let f=M;f<F;f++)for(let b=$;b<I;b++){const y=f*r+b,w=V(b-x,f-c,e)*h,l=u[y]+=w;i=Math.min(i,l),s=Math.max(s,l)}}return{min:i,max:s}}function Z(t){const e=U.exec(t);if(!e)return null;const{hh:o,mm:r,ss:a,ms:u}=e.groups;return Number(o)*E.hours+Number(r)*E.minutes+Number(a)*E.seconds+Number(u||0)}async function H(t,e,o=!0){if(!e)return[];const{field:r,field2:a,field3:u,fieldDelimiter:i,fieldInfos:s,timeZone:g}=t,d=r&&(s==null?void 0:s.find(l=>l.name.toLowerCase()===r.toLowerCase())),N=!!d&&_(d),x=!!d&&A(d),c=t.valueExpression,$=t.normalizationType,M=t.normalizationField,F=t.normalizationTotal,I=[],h=t.viewInfoParams;let f=null,b=null;if(c){if(!m){const{arcadeUtils:l}=await B();m=l}m.hasGeometryOperations(c)&&await m.enableGeometryOperations(),f=m.createFunction(c),b=h?m.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new D(h.spatialReference)}):null}const y=t.fieldInfos,w=!(e[0]&&"declaredClass"in e[0]&&e[0].declaredClass==="esri.Graphic")&&y?{fields:y}:null;return e.forEach(l=>{const p=l.attributes;let n;if(c){const v=w?{...l,layer:w}:l,C=m.createExecContext(v,b,g);n=m.executeFunction(f,C)}else p&&(n=p[r],a?(n=`${T(n)}${i}${T(p[a])}`,u&&(n=`${n}${i}${T(p[u])}`)):typeof n=="string"&&o&&(x?n=n?new Date(n).getTime():null:N&&(n=n?Z(n):null)));if($&&typeof n=="number"&&isFinite(n)){const v=p&&parseFloat(p[M]);n=R(n,$,v,F)}I.push(n)}),I}export{H as b,W as j,Z as w,q as x};
